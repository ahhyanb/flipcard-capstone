{"ast":null,"code":"import{useState}from\"react\";import{Link,useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CreateDeck(){const navigate=useNavigate();const[name,setName]=useState(\"\");const[description,setDescription]=useState(\"\");const handleNameChange=event=>setName(event.target.value);const handleDescriptionChange=event=>setDescription(event.target.value);const handleSubmitButton=async event=>{event.preventDefault();// Create formData including all relevant keys (name, description, cards)\nconst formData={name:name,description:description,cards:[]// Including cards as per the instructions\n};try{// Send a POST request with the formData as the body\nconst response=await fetch(\"http://mockhost/decks\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)});if(!response.ok){throw new Error(\"Failed to create a new deck\");}const newDeck=await response.json();navigate(`/decks/${newDeck.id}`);// Navigate to the newly created deck's page\n}catch(error){console.error(\"Error creating the deck:\",error);}};const handleCancelButton=()=>navigate(\"/\");return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"nav\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"breadcrumb-item\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",style:{color:'black'},children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"breadcrumb-item active\",\"aria-current\":\"page\",children:\"Create Deck\"})]})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitButton,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"form-label\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"name\",value:name,onChange:handleNameChange,placeholder:\"Enter deck name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",className:\"form-label\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"description\",rows:\"4\",value:description,onChange:handleDescriptionChange,placeholder:\"Enter deck description\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-start gap-3\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn\",style:{backgroundColor:'black',color:'white'},onClick:handleCancelButton,children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-x-lg\"}),\" Cancel\"]}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn\",style:{backgroundColor:'#8B4513',color:'white'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check-lg\"}),\" Submit\"]})]})]})})]});}export default CreateDeck;","map":{"version":3,"names":["useState","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateDeck","navigate","name","setName","description","setDescription","handleNameChange","event","target","value","handleDescriptionChange","handleSubmitButton","preventDefault","formData","cards","response","fetch","method","headers","body","JSON","stringify","ok","Error","newDeck","json","id","error","console","handleCancelButton","children","className","to","style","color","onSubmit","htmlFor","type","onChange","placeholder","rows","backgroundColor","onClick"],"sources":["/Users/ahhyan/Chegg/flipcard-capstone-project/src/components/CreateDeck.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction CreateDeck() {\n  const navigate = useNavigate();\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleNameChange = (event) => setName(event.target.value);\n  const handleDescriptionChange = (event) => setDescription(event.target.value);\n\n  const handleSubmitButton = async (event) => {\n    event.preventDefault();\n\n    // Create formData including all relevant keys (name, description, cards)\n    const formData = {\n      name: name,\n      description: description,\n      cards: [], // Including cards as per the instructions\n    };\n\n    try {\n      // Send a POST request with the formData as the body\n      const response = await fetch(\"http://mockhost/decks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create a new deck\");\n      }\n\n      const newDeck = await response.json();\n      navigate(`/decks/${newDeck.id}`); // Navigate to the newly created deck's page\n    } catch (error) {\n      console.error(\"Error creating the deck:\", error);\n    }\n  };\n\n  const handleCancelButton = () => navigate(\"/\");\n\n  return (\n    <>\n      {/* Breadcrumb Navigation */}\n      <nav className=\"container my-3\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" style={{ color: 'black' }}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n\n      <hr />\n\n      {/* Create Deck Form */}\n      <div className=\"container\">\n        <form onSubmit={handleSubmitButton}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              value={name}\n              onChange={handleNameChange}\n              placeholder=\"Enter deck name\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label\">\n              Description\n            </label>\n            <textarea\n              className=\"form-control\"\n              id=\"description\"\n              rows=\"4\"\n              value={description}\n              onChange={handleDescriptionChange}\n              placeholder=\"Enter deck description\"\n            />\n          </div>\n\n          <div className=\"d-flex justify-content-start gap-3\">\n            <button\n              type=\"button\"\n              className=\"btn\"\n              style={{ backgroundColor: 'black', color: 'white' }}\n              onClick={handleCancelButton}\n            >\n              <i className=\"bi bi-x-lg\"></i> Cancel\n            </button>\n            <button type=\"submit\" className=\"btn\" style={{ backgroundColor: '#8B4513', color: 'white' }}>\n              <i className=\"bi bi-check-lg\"></i> Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default CreateDeck;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}