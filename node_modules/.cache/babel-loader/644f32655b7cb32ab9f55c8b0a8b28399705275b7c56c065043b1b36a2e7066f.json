{"ast":null,"code":"var _jsxFileName = \"/Users/ahhyan/Chegg/flipcard-capstone-project/src/components/Deck.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deck() {\n  _s();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const navigate = useNavigate();\n\n  // Fetch deck data when component mounts\n  useEffect(() => {\n    async function fetchDeck() {\n      try {\n        const response = await fetch(`http://mockhost/decks/${deckId}`);\n        if (response.status === 404) {\n          navigate('/');\n          return;\n        }\n        const deckData = await response.json();\n        setDeck(deckData);\n      } catch (error) {\n        console.error(\"Failed to load the deck:\", error);\n        navigate('/');\n      }\n    }\n    fetchDeck();\n  }, [deckId, navigate]);\n\n  // Rendering the deck and its cards\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              color: 'black'\n            },\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: deck.cards && deck.cards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Front:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), \" \", card.front, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Back:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), \" \", card.back]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deckId}/cards/new`,\n      className: \"btn btn-primary\",\n      children: \"Add Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Deck, \"IRrBvJGVk+WkauNLrQ8b5sIpOQg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","jsxDEV","_jsxDEV","Deck","_s","deckId","deck","setDeck","cards","navigate","fetchDeck","response","fetch","status","deckData","json","error","console","className","children","to","style","color","fileName","_jsxFileName","lineNumber","columnNumber","name","description","map","card","front","back","id","_c","$RefreshReg$"],"sources":["/Users/ahhyan/Chegg/flipcard-capstone-project/src/components/Deck.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\n\nfunction Deck() {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({ cards: [] });\n  const navigate = useNavigate();\n\n  // Fetch deck data when component mounts\n  useEffect(() => {\n    async function fetchDeck() {\n      try {\n        const response = await fetch(`http://mockhost/decks/${deckId}`);\n        if (response.status === 404) {\n          navigate('/');\n          return;\n        }\n        const deckData = await response.json();\n        setDeck(deckData);\n      } catch (error) {\n        console.error(\"Failed to load the deck:\", error);\n        navigate('/');\n      }\n    }\n\n    fetchDeck();\n  }, [deckId, navigate]);\n\n  // Rendering the deck and its cards\n  return (\n    <div className=\"container my-3\">\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\" style={{ color: 'black' }}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            {deck.name}\n          </li>\n        </ol>\n      </nav>\n\n      <h2>{deck.name}</h2>\n      <p>{deck.description}</p>\n\n      <div>\n        <h3>Cards</h3>\n        <ul>\n          {deck.cards && deck.cards.map((card) => (\n            <li key={card.id}>\n              <strong>Front:</strong> {card.front} <br />\n              <strong>Back:</strong> {card.back}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">Add Card</Link>\n    </div>\n  );\n}\n\nexport default Deck;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAAEY,KAAK,EAAE;EAAG,CAAC,CAAC;EAC/C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACd,eAAea,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBP,MAAM,EAAE,CAAC;QAC/D,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BJ,QAAQ,CAAC,GAAG,CAAC;UACb;QACF;QACA,MAAMK,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACtCR,OAAO,CAACO,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDP,QAAQ,CAAC,GAAG,CAAC;MACf;IACF;IAEAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,MAAM,EAAEI,QAAQ,CAAC,CAAC;;EAEtB;EACA,oBACEP,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAK,cAAW,YAAY;MAAAiB,QAAA,eAC1BjB,OAAA;QAAIgB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxBjB,OAAA;UAAIgB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC7BjB,OAAA,CAACH,IAAI;YAACqB,EAAE,EAAC,GAAG;YAACC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAAAH,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACLxB,OAAA;UAAIgB,SAAS,EAAC,wBAAwB;UAAC,gBAAa,MAAM;UAAAC,QAAA,EACvDb,IAAI,CAACqB;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENxB,OAAA;MAAAiB,QAAA,EAAKb,IAAI,CAACqB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBxB,OAAA;MAAAiB,QAAA,EAAIb,IAAI,CAACsB;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBxB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdxB,OAAA;QAAAiB,QAAA,EACGb,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACjC5B,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAAiB,QAAA,EAAQ;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACC,KAAK,EAAC,GAAC,eAAA7B,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3CxB,OAAA;YAAAiB,QAAA,EAAQ;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACE,IAAI;QAAA,GAF1BF,IAAI,CAACG,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAENxB,OAAA,CAACH,IAAI;MAACqB,EAAE,EAAE,UAAUf,MAAM,YAAa;MAACa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEV;AAACtB,EAAA,CAzDQD,IAAI;EAAA,QACQL,SAAS,EAEXE,WAAW;AAAA;AAAAkC,EAAA,GAHrB/B,IAAI;AA2Db,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}